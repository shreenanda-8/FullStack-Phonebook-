{"version":3,"sources":["servises/phone.js","App.js","index.js"],"names":["baseUrl","obj","getAll","axios","get","create","newObject","post","remove","id","delete","update","put","Persons","props","listOfPeople","list","listOfDisplayData","display","OverallInfo","map","info","index","name","number","visible","length","filter","onClick","handleDeleteSender","Filter","searchField","handleSearchField","value","onChange","PersonForm","newName","newNumber","handleNameSender","handleNumberSender","handleSubmitSender","event","type","Notification","text","color","notif","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","persons","setPersons","setVisible","error","setError","setColor","setNewNumber","setNewName","setSearch","useEffect","disp","phoneServise","then","Info","i","data","push","catch","err","console","log","message","DoTheJob","preventDefault","listPeople","target","listVisible","listToDisplay","toLowerCase","includes","handleSearchChange","newNmae","handleName","handleNumber","window","confirm","response","setTimeout","handleSubmit","visibility","updated","ind","handleDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.259773d2.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = ()=>{\r\n    return axios.get(baseUrl)\r\n}\r\nconst create = newObject=>{\r\n    return axios.post(baseUrl, newObject)\r\n}\r\nconst remove = (id)=>{\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\nconst update = (newObject)=>{\r\n    return axios.put(`${baseUrl}/${newObject.id}`, newObject)\r\n}\r\nconst obj = {\r\n    getAll: getAll,\r\n    create: create,\r\n    remove: remove,\r\n    update: update\r\n}\r\nexport default obj","import React, { useEffect, useState } from 'react'\r\n\r\nimport phoneServise from './servises/phone.js'\r\nconst Persons = (props) => {\r\n\r\n    const listOfPeople = props.list\r\n    const listOfDisplayData = props.display\r\n    //  const uid = ()=>{\r\n    //         return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n    //     }\r\n    const OverallInfo = listOfPeople.map((info, index) => {\r\n        return { name: info.name, number: info.number, visible: listOfDisplayData[index], id: info.id }\r\n    })\r\n    if (OverallInfo.length) {\r\n        const curate = OverallInfo.filter((info) => {\r\n            return info.visible === true\r\n        })\r\n        const list = curate.map((info) => {\r\n\r\n            return <p key={info.name}>{info.name}  {info.number} <button onClick={() => props.handleDeleteSender(info)}>Delete</button></p>\r\n        })\r\n        return (\r\n            <div>\r\n                {\r\n                    list\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n    else { return <></> }\r\n}\r\nconst Filter = ({ searchField, handleSearchField }) => {\r\n    return (\r\n        <div>\r\n            form shown with <input value={searchField} onChange={handleSearchField} />\r\n        </div>\r\n    )\r\n}\r\nconst PersonForm = ({ newName, newNumber, handleNameSender, handleNumberSender, handleSubmitSender }) => {\r\n    return (\r\n        <form >\r\n            <div>\r\n                name: <input value={newName} onChange={(event) => handleNameSender(event)} />\r\n            </div>\r\n            <div>number: <input value={newNumber} onChange={(event) => handleNumberSender(event)} /></div>\r\n            <div>\r\n                <button type=\"submit\" onClick={(event) => handleSubmitSender(event)}>add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst Notification = ({ text, color }) => {\r\n    const notif = {\r\n        color: `${color}`,\r\n\r\n        background: \"lightgrey\",\r\n        fontSize: \"20px\",\r\n        borderStyle: \"solid\",\r\n        borderRadius: \"5px\",\r\n        padding: \"10px\",\r\n        marginBottom: \"10px\"\r\n    }\r\n   if(text)\r\n   {\r\n    return (\r\n        <div style={notif}>\r\n            <h1>{text}</h1>\r\n        </div>\r\n    )\r\n\r\n   }\r\n   else{\r\n       return(<></>)\r\n   }\r\n\r\n}\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [visible, setVisible] = useState([])\r\n    const [error, setError] = useState(null)\r\n    const [color, setColor] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [newName, setNewName] = useState('')\r\n    const [searchField, setSearch] = useState('')\r\n    useEffect(() => {\r\n        function DoTheJob() {\r\n            const disp = visible\r\n            phoneServise.getAll()\r\n                .then((Info) => {\r\n\r\n\r\n                    for (var i = 0; i < Info.data.length; i++) {\r\n                        disp.push(true)\r\n                    }\r\n                    setVisible(disp)\r\n                    setPersons(Info.data)\r\n                })\r\n                .catch((err) => {\r\n                    console.log({ error: err.message })\r\n                })\r\n\r\n        }\r\n        DoTheJob()\r\n\r\n    }, [visible])\r\n    const handleName = (event) => {\r\n\r\n        //I got an error about uncontrolled input and controlled input unitil I updated the state\r\n        setNewName(event.target.value)\r\n\r\n    }\r\n\r\n    const handleNumber = (event) => {\r\n        event.preventDefault()\r\n        setNewNumber(event.target.value)\r\n    }\r\n  \r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault()\r\n        const listPeople = [...persons]\r\n        const listVisible = [...visible]\r\n        //Directly checking includes of an array of objects is not possible\r\n        const listNames = listPeople.map((info) => info.name)\r\n\r\n        if (listNames.includes(newName)) {\r\n            if (window.confirm(`${newName} is already added to phonebook, replace old number with new one?`)) {\r\n                const list = persons.map((info) => {\r\n                    if (info.name === newName) {\r\n                        info.number = newNumber\r\n                    }\r\n                    return info\r\n                })\r\n                const info = persons.filter((info) => info.name === newName)\r\n\r\n                info[0].number = newNumber\r\n                phoneServise.update(info[0])\r\n                    .then((response) => {\r\n                        setPersons(list)\r\n                         setError(`Changed the number of ${newName}`)\r\n                    setColor(\"green\")\r\n                    setTimeout(() => {\r\n                        setError(null)\r\n                    }, 3000)\r\n                    })\r\n                    .catch((err)=>{\r\n                        console.log({error: err.message})\r\n                    })\r\n            }\r\n        }\r\n        else {\r\n            const data = { name: newName, number: newNumber}\r\n            phoneServise.create(data)\r\n                .then((response) => {\r\n                    listVisible.push(true)\r\n\r\n                    listPeople.push(response.data)\r\n                    setPersons(listPeople)\r\n                    setVisible(listVisible)\r\n                    setError(`Added ${newName}`)\r\n                    setColor(\"green\")\r\n                    setTimeout(() => {\r\n                        setError(null)\r\n                    }, 3000)\r\n                })\r\n                .catch((err) => {\r\n                    console.log({ error: err.message })\r\n                })\r\n\r\n\r\n        }\r\n\r\n    }\r\n    const handleSearchChange = (event) => {\r\n        event.preventDefault()\r\n\r\n        const listPeople = [...persons]\r\n\r\n        setSearch(event.target.value)\r\n        const listVisible = [...visible]\r\n\r\n        const listToDisplay = listPeople.map((info, index) => {\r\n            var name = info.name.toLowerCase()\r\n            //Setting event.target.value works but searchField is not working it's always 1 step behind the time\r\n            //That's why better to use event.target.value\r\n\r\n            if (!name.includes(event.target.value.toLowerCase())) {\r\n\r\n                listVisible[index] = false\r\n\r\n            }\r\n            else {\r\n\r\n                listVisible[index] = true\r\n            }\r\n            return listVisible[index]\r\n        })\r\n\r\n        setVisible(listToDisplay)\r\n    }\r\n    const handleDelete = (Info) => {\r\n\r\n        const list = persons\r\n        const visibility = visible\r\n\r\n        const index = list.map((info) => info.id === Info.id)\r\n        if (window.confirm(`Delete ${Info.name} ?`)) {\r\n            phoneServise.remove(Info.id)\r\n                .then((response) => {\r\n\r\n\r\n                    for (let i = 0; i < index.length; i++) {\r\n                        if (index[i]) {\r\n\r\n                            const updated = visibility.filter((info, ind) => ind !== i)\r\n                            setVisible(updated)\r\n                            break\r\n                        }\r\n                    }\r\n                    setPersons(list.filter((info) => info.id !== Info.id))\r\n                })\r\n                .catch((err) => {\r\n                    console.log({ error: err.message })\r\n                    setError(`Information of ${Info.name} is already removed from the server. Refresh to see the changes`)\r\n                    setColor('red')\r\n                    setTimeout(() => {\r\n                        setError(null)\r\n                    }, 3000)\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification text={error} color={color} />\r\n            <Filter searchField={searchField} handleSearchField={(event) => handleSearchChange(event)} />\r\n\r\n            <h2>Add a new </h2>\r\n\r\n            <PersonForm\r\n                newNmae={newName}\r\n                newNumber={newNumber}\r\n                handleNameSender={(event) => handleName(event)}\r\n                handleNumberSender={(event) => handleNumber(event)}\r\n                handleSubmitSender={(event) => handleSubmit(event)}\r\n            />\r\n            <h2>Numbers</h2>\r\n            <Persons list={persons} display={visible} handleDeleteSender={(event) => handleDelete(event)} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\n\r\nReactDOM.render(\r\n  <App />, \r\n  document.getElementById('root')\r\n)\r\n\r\n\r\n"],"sourceRoot":""}